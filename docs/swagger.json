{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/metrics": {
            "get": {
                "description": "Use stored quote to generate general metrics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quotes"
                ],
                "summary": "Get quote metrics",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit carriers",
                        "name": "last_quotes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MetricsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.BadParamError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/quote": {
            "post": {
                "description": "Uses frete-rapido API to simulate quote and save response at database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quotes"
                ],
                "summary": "Create quote",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateQuoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreateQuoteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.BadParamError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CreateQuoteRequest": {
            "type": "object",
            "required": [
                "volumes"
            ],
            "properties": {
                "recipient": {
                    "type": "object",
                    "properties": {
                        "address": {
                            "type": "object",
                            "required": [
                                "zipcode"
                            ],
                            "properties": {
                                "zipcode": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "amount",
                            "category",
                            "height",
                            "length",
                            "price",
                            "sku",
                            "unitary_weight",
                            "width"
                        ],
                        "properties": {
                            "amount": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "category": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "height": {
                                "type": "number",
                                "minimum": 0
                            },
                            "length": {
                                "type": "number",
                                "minimum": 0
                            },
                            "price": {
                                "type": "number",
                                "minimum": 0
                            },
                            "sku": {
                                "type": "string"
                            },
                            "unitary_weight": {
                                "type": "number",
                                "minimum": 0
                            },
                            "width": {
                                "type": "number",
                                "minimum": 0
                            }
                        }
                    }
                }
            }
        },
        "models.CreateQuoteResponse": {
            "type": "object",
            "properties": {
                "carrier": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Quote"
                    }
                }
            }
        },
        "models.MetricsResponse": {
            "type": "object",
            "properties": {
                "cheapest_quote": {
                    "type": "integer"
                },
                "most_expensive_quote": {
                    "type": "integer"
                },
                "services": {
                    "type": "object",
                    "properties": {
                        "average_price": {
                            "type": "number"
                        },
                        "carrier": {
                            "type": "string"
                        },
                        "count": {
                            "type": "integer"
                        },
                        "total_price": {
                            "type": "number"
                        }
                    }
                }
            }
        },
        "models.Quote": {
            "type": "object",
            "properties": {
                "deadline": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "service": {
                    "type": "string"
                }
            }
        },
        "utils.BadParamError": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "integer"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/utils.ParamError"
                    }
                }
            }
        },
        "utils.ErrorResponse": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "utils.ParamError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "param": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    }
}